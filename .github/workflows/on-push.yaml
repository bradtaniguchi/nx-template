name: on-push
on:
  # run on push
  push:
    branches:
      - '**'

jobs:
  gen-affected:
    timeout-minutes: 5
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest
    outputs:
      AFFECTED: ${{ steps.gen-affected.outputs.AFFECTED }}
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: false
          fetch-depth: 0
      - uses: ./.github/actions/init-job
      - id: gen-affected
        run: |
          AFFECTED_LINT=$(npx nx print-affected --base=origin/main --head=$GITHUB_REF --select=tasks.target.project --target=lint)
          AFFECTED_TEST=$(npx nx print-affected --base=origin/main --head=$GITHUB_REF --select=tasks.target.project --target=test)
          AFFECTED_BUILD=$(npx nx print-affected --base=origin/main --head=$GITHUB_REF --select=tasks.target.project --target=build)
          AFFECTED_LIGHTHOUSE=$(npx nx print-affected --base=origin/main --head=$GITHUB_REF --select=tasks.target.project --target=lighthouse)
          AFFECTED="$AFFECTED_LINT $AFFECTED_TEST $AFFECTED_BUILD $AFFECTED_LIGHTHOUSE"
          echo $AFFECTED
          echo "::set-output name=AFFECTED::$AFFECTED"

  internal-client:
    timeout-minutes: 5
    if: ${{ !contains(github.event.head_commit.message, 'skip ci') && needs.gen-affected.outputs.AFFECTED != '' }}
    runs-on: ubuntu-latest
    needs:
      - gen-affected
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/init-job
      - run: npx nx run internal-client:lint
      - run: npx nx run internal-client:test
      - run: npx nx run internal-client:build
      # - Add lighthouse
      - uses: actions/upload-artifact@v2
        with:
          name: internal-client
          path: dist/apps/internal-client
          retention-days: 3

  # Job that generates the storybook configuration for all projects that have it,
  # where the storybook library will be built and manage ALL the projects.
  # together via composition. Or at least thats the plan.
  # All of these together will be deployed within the gh-page job.
  internal-storybook:
    timeout-minutes: 5
    if: ${{ !contains(github.event.head_commit.message, 'skip ci') && needs.gen-affected.outputs.AFFECTED != '' }}
    runs-on: ubuntu-latest
    needs:
      - gen-affected
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/init-job
      - run: npx nx run-many --target=build-storybook --all
      - uses: actions/upload-artifact@v2
        with:
          name: internal-storybooks
          path: dist/storybook
          retention-days: 3

  # Job that generates things based on internal tooling.
  # Deployed with the storybook project to gh-pages.
  internal-tools:
    timeout-minutes: 5
    if: ${{ !contains(github.event.head_commit.message, 'skip ci') && needs.gen-affected.outputs.AFFECTED != '' }}
    runs-on: ubuntu-latest
    needs:
      - gen-affected
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/init-job
      - run: npx nx graph --file=dist/nx-graph/index.html
      - uses: actions/upload-artifact@v2
        with:
          name: internal-nx-graph
          path: dist/nx-graph
          retention-days: 3
      - run: npx nx run-many --target=typedoc --all
      - uses: actions/upload-artifact@v2
        with:
          name: internal-docs
          path: dist/docs
          retention-days: 3

  # Job that deploys all the "internal" information that is generated within:
  # internal-client
  # internal-storybook
  # internal-tools
  #
  # If we are on the main branch, then this job will execute to gather and deploy all
  # of the static contents to the local github page.
  gh-pages:
    timeout-minutes: 5
    # TODO: github.ref == 'refs/heads/main'
    if: ${{ !contains(github.event.head_commit.message, 'skip ci') && needs.gen-affected.outputs.AFFECTED != '' }}
    runs-on: ubuntu-latest
    needs:
      - gen-affected
      - internal-client
      - internal-storybook
      - internal-tools
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/init-job
      - run: mkdir dist
      - uses: actions/download-artifact@v2
        with:
          name: internal-client
          # This gets moved to the top-level dist, as it will
          # manage all the other contents.
          path: dist
      - uses: actions/download-artifact@v2
        with:
          name: internal-storybook
          # This gets changed to be plural for a cleaner URL
          path: dist/storybooks
      - uses: actions/download-artifact@v2
        with:
          name: internal-nx-graph
          path: dist/nx-graph
      - uses: actions/download-artifact@v2
        with:
          name: internal-docs
          path: dist/docs
      # DEBUG build
      - uses: actions/upload-artifact@v2
        with:
          name: gh-pages-dist
          path: dist
          retention-days: 1
      - uses: JamesIves/github-pages-deploy-action@4.1.8
        if: github.ref == 'refs/heads/main'
        with:
          branch: gh-pages
          folder: dist
      # TODO: handle actual deploy to gh-pages
